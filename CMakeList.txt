cmake_minimum_required(VERSION 3.11)
project(infMOSTRO CXX)

set(PROJECT_AUTHOR "Laboratorio de Gestión de Sistemas en Tiempo Real")
set(PROJECT_COPYRIGHT "2020, Facultad de Minas, Universidad Nacional de Colombia")
set(PROJECT_DESCRIPTION "C++ Recomedador de Planes Semaforicos para Secretaría de Movilidad Medellín")
set(PROJECT_HOMEPAGE_URL "https://sites.google.com/unal.edu.co/lab-gstr/proyectos/moycot")
set(PROJECT_VCS_URL "https://github.com/jpnorenam/infMOSTRO")

if(CMAKE_PROJECT_NAME STREQUAL PROJECT_NAME)
	set(TOPLEVEL_PROJECT ON)
else()
	set(TOPLEVEL_PROJECT OFF)
endif()

set(CMAKE_CXX_STANDARD 11)
if(CMAKE_CXX_COMPILER_ID STREQUAL Intel)
	# needed by icc, but for some reason not added by CMake
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
endif()
add_definitions(-D_SILENCE_ALL_CXX17_DEPRECATION_WARNINGS)
add_definitions(-D_SILENCE_EXPERIMENTAL_FILESYSTEM_DEPRECATION_WARNING)

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

set(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")

include(CheckCXXCompilerFlag)
if(MSVC)
	# Set exception handling for portability
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHsc")

	check_cxx_compiler_flag("/W4 /WX" CXX_SUPPORTS_WERROR)
	if(CXX_SUPPORTS_WERROR)
	# TODO activate this again after fixing warnings
	#		set(DPSIM_CXX_FLAGS /W4 /WX)
	endif()
else()
	check_cxx_compiler_flag("-Wall -Werror" CXX_SUPPORTS_WERROR)
	if(CXX_SUPPORTS_WERROR)
		set(DPSIM_CXX_FLAGS -Wall -Werror)
	endif()
endif()


include(GetVersion)
GetVersion(${PROJECT_SOURCE_DIR} "INFMOSTRO")

find_package(JsonCpp 1.7.4 REQUIRED)
find_package(Boost 1.65.1 REQUIRED)

if("${CMAKE_SYSTEM}" MATCHES "Linux")
	set(Linux_FOUND ON)

option(BUILD_SHARED_LIBS 	"Build shared library"		ON)
option(BUILD_TEST    "Build test"                     ON )

set(INFMOSTRO_INCLUDE_DIRS
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

add_subdirectory(src)

if(BUILD_EXAMPLES)
	add_subdirectory(test)
endif(BUILD_EXAMPLES)

message(VERBOSE "Compiler Release Flags: " 	${CMAKE_CXX_FLAGS_RELEASE})
message(VERBOSE "Compiler Debug Flags: " 		${CMAKE_CXX_FLAGS_DEBUG})


if(TOPLEVEL_PROJECT)
	if (FOUND_GIT_VERSION)
		message(STATUS "Building ${CMAKE_PROJECT_NAME}:")
		message(STATUS "Feature summary for infMOSTRO")
		message(STATUS "${enabledFeaturesText}")
		message(STATUS "  VERSION:         ${INFMOSTRO_VERSION}")
		message(STATUS "  RELEASE:         ${INFMOSTRO_RELEASE}")
		message(STATUS "  GIT_REV:         ${INFMOSTRO_GIT_REV}")
		message(STATUS "  GIT_BRANCH:      ${INFMOSTRO_GIT_BRANCH}")
		message(STATUS "  VARIANT:         ${INFMOSTRO_VARIANT}")
		message(STATUS "  BUILD_ID:        ${INFMOSTRO_BUILD_ID}")
		message(STATUS "  BUILD_DATE:      ${INFMOSTRO_BUILD_DATE}")
	endif()
endif()

